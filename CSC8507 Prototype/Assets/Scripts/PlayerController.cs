using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{

    public float moveSpeed;
    public Rigidbody rigidBody;

    private Vector3 prevPos = new Vector3(0,0,0);
    public Vector3 frameVel = new Vector3(0,0,0);
    public int touchingCount;
    public bool intent = false;
    private int frameCount = 0;

    private Camera cam;

    public GameObject respawner;

    // Start is called before the first frame update
    void Start()
    {
        rigidBody = GetComponent<Rigidbody>();
        cam = Camera.main;
    }

    // Update is called once per frame
    void Update()
    {
        touchingCount = touchingCount < 0 ? 0 : touchingCount;
        if (frameCount > 0)
        {
            frameCount--;
        } else
        {
            intent = false;
        }
        
        if (touchingCount > 0)
        {
            if (!(transform.position == prevPos))
            {
                frameVel = (((transform.position - prevPos) / (Time.deltaTime)));
                frameVel.y = 0;
                Debug.DrawRay(transform.position, frameVel, Color.green);
                prevPos = transform.position;
            }
            
        } else
        {
            transform.parent = null;
        }
        
        if (transform.parent == null)
        {
            transform.localScale = new Vector3(1, 1, 1);
        } else
        {
            transform.localScale = new Vector3(1.0f / transform.parent.localScale.x, 1.0f / transform.parent.localScale.y, 1.0f / transform.parent.localScale.z);
        }
        
        rigidBody.AddForce(cam.transform.rotation * (new Vector3(Input.GetAxis("Horizontal") * moveSpeed, 0, Input.GetAxis("Vertical") * moveSpeed)));
        if (Input.GetKeyDown("space"))
        {
            rigidBody.AddForce(new Vector3(0, 500, 0));
            intent = true;
            frameCount = 10;
        }
    }


    void OnCollisionEnter(Collision c)
    {
        
        if (c.transform.parent != null)
        {
            if (c.transform.parent.transform.gameObject.name == "Map Elements")
            {
                bool fix = false;
                foreach (ContactPoint contact in c.contacts)
                {
                    if (contact.normal.y > 0.5f && Mathf.Abs(contact.normal.x) < 0.5f && Mathf.Abs(contact.normal.z) < 0.5f)
                    {
                        transform.parent = c.transform;
                        prevPos = transform.position;
                        fix = true;
                    }
                }
                if (fix)
                {
                    touchingCount++;
                }
                
            }
        }
        
    }

    void OnTriggerEnter(Collider c)
    {
        if (c.transform.gameObject.name == "Respawn-A" || c.transform.gameObject.name == "Respawn-B")
        {
            respawner = c.transform.gameObject;
        }
        if (c.transform.gameObject.name == "Death")
        {
            transform.position = respawner.transform.position;
        }
    }

    void OnCollisionExit(Collision c)
    {
        
        if (transform.parent != null)
        {
            if (transform.parent.transform.parent.transform.gameObject.name == "Map Elements")
            {
                //calculate force generated by any additional movement from object
                touchingCount--;
                if (touchingCount <= 0 && intent) //All connections severed, continue force
                {
                    transform.parent = null;
                    rigidBody.AddForce(frameVel * 10);
                    frameVel = new Vector3(0, 0, 0);
                }
                
            }
        }
       
    }
}
